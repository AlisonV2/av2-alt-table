{
  "openapi": "3.0.1",
  "info": {
    "title": "Alt-Table API",
    "description": "In need of a proper description",
    "contact": {
      "email": "alison.vandromme@ynov.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://choosealicense.com/licenses/mit/"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api"
    }
  ],
  "tags": [
    {
      "name": "kitchen",
      "description": "Kitchen service: includes dish and menu endpoints"
    },
    {
      "name": "table",
      "description": "Table service: includes tables, seating-plan and order endpoints"
    },
    {
      "name": "shift",
      "description": "Shift service: includes shift endpoints"
    }
  ],
  "paths": {
    "/menu": {
      "get": {
        "tags": ["kitchen"],
        "summary": "Get the current menu",
        "responses": {
          "200": {
            "description": "Array of dishes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dish"
                  }
                }
              }
            }
          },
          "400": {
            "description": "An error occured while retrieving dishes",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/dish": {
      "get": {
        "tags": ["kitchen"],
        "summary": "Get all the dishes",
        "description": "Returns an array of dishes",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dish"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["kitchen"],
        "summary": "Create a new dish",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Dish"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dish"
                }
              }
            }
          },
          "400": {
            "description": "Error while creating dish",
            "content": {}
          }
        }
      }
    },
    "/dish/{name}": {
      "get": {
        "tags": ["kitchen"],
        "summary": "Get a specific dish by its name",
        "description": "Returns a dish object",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dish"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["kitchen"],
        "summary": "Updates a dish by its name",
        "description": "Returns the newly updated dish",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dish"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/seating-plan": {
      "post": {
        "tags": ["table"],
        "summary": "Create a new seating plan",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SeatingPlan"
              }
            }
          }
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/seating-plan/{shift_id}": {
      "get": {
        "tags": ["table"],
        "summary": "Gets a seating plan by its shift_id",
        "description": "Returns the newly updated seating plan",
        "parameters": [
          {
            "name": "shift_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeatingPlan"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["table"],
        "summary": "Updates a seating-plan by it's shift_id",
        "description": "Returns the newly updated seating plan",
        "parameters": [
          {
            "name": "shift_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SeatingPlan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeatingPlan"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          }
        }
      }
    },
    "/shift": {
      "post": {
        "tags": ["shift"],
        "summary": "Create a new shift",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Shift"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/table": {
      "post": {
        "tags": ["table"],
        "summary": "Create tables, happens once a shift has started.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "array",
                "$ref": "#/components/schemas/Table"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["table"],
        "summary": "Installs customers at a table",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Table"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/table/{table_number}": {
      "get": {
        "tags": ["table"],
        "summary": "Gets a table by its number",
        "description": "Returns the current state of the table",
        "parameters": [
          {
            "name": "table_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["table"],
        "summary": "Updates current bill of the table",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Bill"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Table"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/order": {
      "put": {
        "tags": ["table"],
        "summary": "Pass an order for a table",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/checkout": {
      "post": {
        "tags": ["table"],
        "summary": "Check out a table - Get the current bill and reset the table",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Checkout"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Checkout"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Dish": {
        "required": ["name", "type", "description", "price", "quantity"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "soup"
          },
          "type": {
            "type": "string",
            "enum": ["apetizer", "starter", "main", "dessert", "drink"]
          },
          "description": {
            "description": "A short description of the dish",
            "type": "string",
            "example": "A bowl of soup"
          },
          "price": {
            "type": "number",
            "description": "Price of the dish, rounded to 2 decimals",
            "example": "25.50"
          },
          "quantity": {
            "type": "number",
            "description": "Quantity of the dish available",
            "example": "1"
          }
        }
      },
      "SeatingPlan": {
        "required": ["shift_id", "tables"],
        "type": "object",
        "properties": {
          "shift_id": {
            "type": "string",
            "format": "DD-MM-YYYY-shifttype",
            "example": "25-11-1991-dinner"
          },
          "tables": {
            "type": "array",
            "description": "Array of tables with table_number and seats"
          }
        }
      },
      "Shift": {
        "required": ["shift_id", "started_at"],
        "type": "object",
        "properties": {
          "shift_id": {
            "type": "string",
            "format": "DD-MM-YYYY-shifttype",
            "example": "25-11-1991-dinner"
          },
          "started_at": {
            "type": "string",
            "description": "Time at which the shift was started"
          }
        }
      },
      "Table": {
        "required": ["table_number", "seats"],
        "type": "object",
        "properties": {
          "table_id": {
            "type": "integer",
            "format": "int64"
          },
          "seats": {
            "type": "integer",
            "example": "6"
          },
          "status": {
            "type": "string",
            "description": "Status of the table",
            "enum": ["available", "occupied", "reserved"]
          },
          "customers": {
            "type": "integer",
            "example": "4",
            "description": "Number of customers installed at the table"
          },
          "current_bill": {
            "type": "number",
            "example": "25.50",
            "description": "Current bill of the table"
          },
          "meal_state": {
            "type": "string",
            "description": "State of the meal",
            "enum": ["not-started", "started", "finished"]
          }
        }
      },
      "Order": {
        "required": ["shift_id", "table_number", "dishes"],
        "type": "object",
        "properties": {
          "shift_id": {
            "type": "string",
            "format": "DD-MM-YYYY-shifttype",
            "example": "25-11-1991-dinner"
          },
          "table_number": {
            "type": "integer",
            "description": "Number of table from which the order is passed"
          },
          "dishes": {
            "type": "array",
            "description": "Array of dishes ordered. Takes the name of the dish and a comment"
          },
          "bill_paid": {
            "type": "boolean",
            "description": "Whether the bill has been paid"
          }
        }
      },
      "Bill": {
        "required": ["table_number", "bill"],
        "type": "object",
        "properties": {
          "table_number": {
            "type": "integer",
            "description": "Number of table from which the order is passed"
          },
          "bill": {
            "type": "number",
            "description": "Total bill of the table"
          }
        }
      },
      "Checkout": {
        "required": ["shift_id", "table_number"],
        "type": "object",
        "properties": {
          "shift_id": {
            "type": "string",
            "format": "DD-MM-YYYY-shifttype",
            "example": "25-11-1991-dinner"
          },
          "table_number": {
            "type": "integer",
            "description": "Number of table from which the order is passed"
          },
          "tip": {
            "type": "number",
            "description": "Tip left by customers"
          }
        }
      }
    }
  }
}
